

services:
  redis:
    image: redis:alpine
    container_name: teamlink-redis-1
    ports:
      - "6379:6379"
    restart: always

  db:
    image: postgres:16
    container_name: teamlink-postgres-1
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app  
      - /app/node_modules
    env_file:
      - ./frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  
    env_file:
      - ./backend/.env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - db
    restart: always

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend
    env_file:
      - ./backend/.env
    restart: always


  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"  
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static  
      - media_volume:/app/media    
    depends_on:
      - frontend
      - backend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
